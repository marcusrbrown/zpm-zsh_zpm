#!/usr/bin/env zsh

rehash
compinit -i -d "${_ZPM_COMPDUMP}"
unfunction source 2>/dev/null

echo "$is" >! $ZSH_CACHE_DIR/is

local _ZPM_TMP="$(mktemp)"
local _ZPM_TMP_ASYNC="$(mktemp)"

echo "autoload -Uz -- @zpm-clean $_ZPM_autoload" >> "$_ZPM_TMP"
echo >> "$_ZPM_TMP"

echo 'compinit -i -C -d "${_ZPM_COMPDUMP}"' >> "$_ZPM_TMP"
echo >> "$_ZPM_TMP"

for plugin in ${_ZPM_plugins_for_source}; do
  local file="$_ZPM_file_for_source["$plugin"]"
  echo "(){" >> "$_ZPM_TMP"
  echo "0='${file}'" >> "$_ZPM_TMP"
  cat "${file}" |\
    grep -F -v '#!/usr/bin/env zsh' |\
    grep -F -v '${ZERO:-${${0:#$ZSH_ARGZERO}:-${(%):-%N}}}' |\
    grep -F -v '${${ZERO:-${0:#$ZSH_ARGZERO}}:-${(%):-%N}}' |\
    grep -F -v '${${(M)0:#/*}:-$PWD/$0}' |\
    >> "$_ZPM_TMP"
  echo "}" >> "$_ZPM_TMP"
  echo >> "$_ZPM_TMP"
done

echo "sched +0 source '$_ZPM_CACHE_ASYNC'" >> "$_ZPM_TMP"
echo >> "$_ZPM_TMP"

echo 'if [[ -s $ZSH_CACHE_DIR/is ]]; then' >> "$_ZPM_TMP"
echo '  if [[ "$is" != "$(<$ZSH_CACHE_DIR/is)" ]]; then' >> "$_ZPM_TMP"
echo '    @zpm-clean' >> "$_ZPM_TMP"
echo '  fi' >> "$_ZPM_TMP"
echo 'fi' >> "$_ZPM_TMP"

echo >> "$_ZPM_TMP"

echo >> "$_ZPM_TMP"
echo 'zpm () {}' >> "$_ZPM_TMP"

echo "$(typeset -p _ZPM_plugins_full)" >> "$_ZPM_TMP_ASYNC"
echo 'unfunction zpm' >> "$_ZPM_TMP_ASYNC"
echo >> "$_ZPM_TMP_ASYNC"

for plugin in ${_ZPM_plugins_for_async_source}; do
  local file="$_ZPM_file_for_async_source["$plugin"]"
  echo "(){" >> "$_ZPM_TMP_ASYNC"
  echo "0='${file}'" >> "$_ZPM_TMP_ASYNC"
  cat "${file}" |\
    grep -F -v '#!/usr/bin/env zsh' |\
    grep -F -v '${ZERO:-${${0:#$ZSH_ARGZERO}:-${(%):-%N}}}' |\
    grep -F -v '${${ZERO:-${0:#$ZSH_ARGZERO}}:-${(%):-%N}}' |\
    grep -F -v '${${(M)0:#/*}:-$PWD/$0}' |\
    >> "$_ZPM_TMP_ASYNC"
  echo "}" >> "$_ZPM_TMP_ASYNC"
  echo >> "$_ZPM_TMP_ASYNC"
done

echo "zle && zle reset-prompt" >> "$_ZPM_TMP_ASYNC"
echo "sched +0 source ${_ZPM_DIR}/lib/init.zsh" >> "$_ZPM_TMP_ASYNC"

mv "$_ZPM_TMP" "$_ZPM_CACHE"
mv "$_ZPM_TMP_ASYNC" "$_ZPM_CACHE_ASYNC"

(@zpm-compile 2>/dev/null &)
